server:
  port: 0

spring:
  application:
    name: environmental-analyzer
  profiles:
    active: local
    
  datasource:
    url: jdbc:postgresql://localhost:26259/analyzer_db?sslmode=disable
    username: root
    password: 
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
      
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        format_sql: true
        use_sql_comments: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    open-in-view: false

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:admin}
    password: ${SPRING_RABBITMQ_PASSWORD:admin}
    connection-timeout: 30000
    publisher-confirm-type: correlated
    publisher-returns: true
    
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}
    metadata-map:
      management.context-path: /actuator

# Logging configuration
logging:
  level:
    com.eval.conjunta.analyzer: INFO
    org.springframework.amqp: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always

# Custom application properties
app:
  analyzer:
    thresholds:
      temperature:
        high: 40.0
      humidity:
        low: 20.0
      seismic:
        critical: 3.0
    scheduling:
      daily-report: "0 0 0 * * *"  # Cada d√≠a a medianoche
      sensor-check: "0 0 */6 * * *"  # Cada 6 horas

---
# Docker/Production profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://crdb-node1:26257/analyzer_db?sslmode=disable}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:admin}
    password: ${SPRING_RABBITMQ_PASSWORD:admin}
  # Eureka configuration for Docker
  eureka:
    client:
      service-url:
        defaultZone: http://eureka-server:8761/eureka
    instance:
      prefer-ip-address: true
